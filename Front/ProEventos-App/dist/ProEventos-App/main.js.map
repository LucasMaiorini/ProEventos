{"version":3,"sources":["./src/app/components/contatos/contatos.component.ts","./src/app/components/contatos/contatos.component.html","./src/app/helpers/DateTimeFormat.pipe.ts","./src/environments/environment.ts","./src/app/components/eventos/eventos.component.html","./src/app/components/eventos/eventos.component.ts","./src/app/shared/nav/nav.component.html","./src/app/shared/nav/nav.component.ts","./src/app/utils/constants.ts","./src/app/components/user/registration/registration.component.ts","./src/app/components/user/registration/registration.component.html","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/components/eventos/evento-detalhe/evento-detalhe.component.ts","./src/app/components/eventos/evento-detalhe/evento-detalhe.component.html","./src/app/helpers/ValidatorField.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/event.service.ts","./src/app/components/user/login/login.component.ts","./src/app/components/user/login/login.component.html","./src/app/services/batch.service.ts","./src/app/components/palestrantes/palestrantes.component.ts","./src/app/components/palestrantes/palestrantes.component.html","./src/app/shared/title/title.component.ts","./src/app/shared/title/title.component.html","./src/app/components/user/perfil/perfil.component.ts","./src/app/components/user/perfil/perfil.component.html","./src/app/app-routing.module.ts","./src/app/components/user/user.component.ts","./src/app/components/user/user.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contatos',\n  templateUrl: './contatos.component.html',\n  styleUrls: ['./contatos.component.scss']\n})\nexport class ContatosComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<app-title [title]=\"'Contatos'\" [icon]=\"'user-friends'\"></app-title>\n","import { DatePipe } from '@angular/common';\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { Constants } from '../utils/constants';\n\n@Pipe({\n  name: 'DateTimeFormat'\n})\nexport class DateTimeFormatPipe extends DatePipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n    return super.transform(value, Constants.DATE_TIME_FMT);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<app-title [title]=\"'Eventos'\" [icon]=\"'calendar-alt'\"></app-title>\n\n\n<div class=\"card rounded p-3\">\n  <div class=\"d-flex\">\n    <div class=\"flex-fill pr-5\">\n      <div class=\"input-group mb-2\">\n        <div class=\"input-group-prepend\">\n          <div class=\"input-group-text\">\n            <i class=\"fa fa-search\" style=\"color: #cecece;\"></i>\n          </div>\n        </div>\n        <input type=\"text\" class=\"form-control rounded-right\" [(ngModel)]=\"filtersListBy\" placeholder=\"buscar\">\n      </div>\n    </div>\n    <div>\n      <button class=\"d-flex btn btn-outline-secondary\" tooltip=\"Criar um novo evento\" [routerLink]=\"['/detalhe']\">\n        <i class=\"fa fa-plus-circle my-1\"></i>\n        <b class=\"ml-1 d-none d-sm-block\"> Novo </b>\n      </button>\n    </div>\n  </div>\n\n  <ngx-spinner bdColor=\"rgba(0,0,0,0)\" size=\"medium\" color=\"#000000\" type=\"ball-newton-cradle\" [fullScreen]=\"false\">\n    <!-- <p style=\"color: rgb(0, 0, 0)\"> Aguarde... </p> -->\n  </ngx-spinner>\n\n  <table class=\"table table-stripped\">\n    <thead class=\"thead-dark\">\n      <tr>\n        <th class=\"d-none d-md-table-cell\">#</th>\n        <th class=\"d-none d-md-table-cell\">\n          <button class=\"btn btn-outline-light btn-sm\" (click)=\"showImage()\">\n            <span *ngIf=\"showingImage; else ImageHideMessage\" tooltip=\"Mostrar Imagem\">\n              <i class=\"fa fa-eye\"></i>\n            </span>\n            <ng-template #ImageHideMessage>\n              <i class=\"fa fa-slash\" tooltip=\"Ocultar Imagem\"></i>\n            </ng-template>\n          </button>\n        </th>\n        <th>Tema</th>\n        <th>Local</th>\n        <th>Data</th>\n        <th class=\"d-none d-sm-table-cell\">Ocupação Máxima</th>\n        <th class=\"d-none d-sm-table-cell\">Lote</th>\n        <th>Opções</th>\n      </tr>\n    </thead>\n    <tbody *ngIf=\"events && events.length\">\n      <tr *ngFor=\"let event of filteredEvents\" (click)=\"detailEvent(event.id)\" class=\"tr-selected\">\n        <td class=\"d-none d-md-table-cell\">{{event.id}}</td>\n        <td class=\"d-none d-md-table-cell\">\n          <span [collapse]=\"showingImage\" [isAnimated]=\"true\">\n            <img src=\"/assets/{{event.imageURL}}\" [style.width.px]=\"80\">\n          </span>\n        </td>\n        <td>{{event.theme}}</td>\n        <td>{{event.location}}</td>\n        <td>{{event.eventDate | DateTimeFormat}}</td>\n        <td class=\"d-none d-sm-table-cell\">{{event.numberOfPeople}}</td>\n        <td class=\"d-none d-sm-table-cell\">{{event.batches[0]?.name}}</td>\n        <td>\n          <button type=\"button\" class=\"btn btn-danger btn-sm\" (click)=\"openModal($event, template, event.id, event.theme)\" tooltip=\"Excluir\"\n            placement=\"right\">\n            <i class=\"fa fa-trash\"></i>\n          </button>\n        </td>\n      </tr>\n    </tbody>\n    <tfoot>\n      <tr *ngIf=\"!events.length\">\n        <td colspan=\"8\">\n          <h4 class=\"text-center\">Não há eventos cadastrados :(</h4>\n        </td>\n      </tr>\n    </tfoot>\n  </table>\n</div>\n<ng-template #template>\n  <div class=\"modal-body text-center\">\n    <p>Deseja excluir o evento: {{eventTheme}} [id: {{eventId}}]?</p>\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"confirm()\">Sim</button>\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"decline()\">Não</button>\n  </div>\n</ng-template>\n<router-outlet></router-outlet>\n","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { Event } from '@app/models/Event';\nimport { EventService } from '@app/services/event.service';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-eventos',\n  templateUrl: './eventos.component.html',\n  styleUrls: ['./eventos.component.scss']\n})\nexport class EventosComponent implements OnInit {\n\n  modalRef!: BsModalRef;\n  public events: Event[] = [];\n  public filteredEvents: Event[] = [];\n  private filter = '';\n  eventId = 0;\n  public showingImage = true;\n  eventTheme = '';\n\n  public get filtersListBy(): string {\n    return this.filter;\n  }\n\n  public set filtersListBy(value: string) {\n    this.filter = value;\n    this.filteredEvents = this.filtersListBy ? this.eventsFilter(this.filtersListBy) : this.events;\n  }\n\n  constructor(\n    private eventService: EventService,\n    private modalService: BsModalService,\n    private toastr: ToastrService,\n    private spinner: NgxSpinnerService,\n    private router: Router,\n  ) { }\n\n  public ngOnInit(): void {\n    this.spinner.show();\n    this.getEvents();\n  }\n\n  public getEvents(): void {\n    this.eventService.getEvents().subscribe({\n      next: (events: Event[]) => {\n        this.events = events;\n        this.filteredEvents = this.events;\n      },\n      error: (error: any) => {\n        this.spinner.hide();\n        this.toastr.error('Não foi possível carregar os eventos', 'Erro!');\n      },\n      complete: () => this.spinner.hide()\n    });\n  }\n\n  public eventsFilter(filtersListBy: string): Event[] {\n    filtersListBy = filtersListBy.toLocaleLowerCase();\n    return this.events.filter(\n      (event: any) => event.theme.toLocaleLowerCase().indexOf(filtersListBy) !== -1 ||\n        event.location.toLocaleLowerCase().indexOf(filtersListBy) !== -1\n    );\n  }\n\n  public showImage(): void {\n    this.showingImage = !this.showingImage;\n  }\n\n  detailEvent(id: number): void {\n    this.router.navigate([`detalhe/${id}`]);\n  }\n\n  // MODAL\n  openModal(event: any, template: TemplateRef<any>, id: number, theme: string): void {\n    event.stopPropagation();\n    this.eventId = id;\n    this.eventTheme = theme;\n    this.modalRef = this.modalService.show(template, { class: 'modal-sm' });\n  }\n\n  confirm(): void {\n    this.modalRef.hide();\n    this.spinner.show();\n    this.eventService.deleteEvent(this.eventId).subscribe({\n      next: (result: string) => {\n        this.toastr.success('O evento foi excluído com sucesso!', 'Excluído');\n        this.getEvents();\n      },\n      error: (error: any) => {\n        this.spinner.hide();\n        this.toastr.error('Não foi possível excluir o evento!', 'Operação falhou');\n        console.error(error);\n      },\n      complete: () => { }\n    }).add(() => { this.spinner.hide(); });\n  }\n\n  decline(): void {\n    this.modalRef.hide();\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\" *ngIf=\"showMenu()\">\n  <div class=\"container-fluid\">\n    <a class=\"navbar-brand\" routerLink=\"dashboard\">ProEventos</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\"\n      aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"\n      (click)=\"isCollapsed = !isCollapsed\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" [collapse]=\"isCollapsed\" [isAnimated]=\"true\">\n      <ul class=\"navbar-nav me-auto mb-2 mb-lg-0 mr-auto\">\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" aria-current=\"page\" routerLink=\"eventos\" >Eventos</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"palestrantes\">Palestrantes</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"contatos\">Contatos</a>\n        </li>\n      </ul>\n\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item dropdown\" dropdown>\n          <a dropdownToggle class=\"nav-link dropdown-toggle\" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\"\n            aria-haspopup=\"true\" aria-expanded=\"false\" style=\"cursor: pointer;\">\n            Vinícius\n          </a>\n          <div *dropdownMenu class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n            <a class=\"dropdown-item\" routerLink=\"user/perfil\">\n              Perfil\n            </a>\n            <div role=\"separator\" class=\"divider\"></div>\n            <a class=\"dropdown-item\" routerLink=\"user/login\">\n              Sair\n            </a>\n          </div>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent implements OnInit {\n  isCollapsed = true;\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n  showMenu(): boolean {\n    return this.router.url !== '/user/login';\n  }\n}\n","export class Constants {\n  static readonly DATE_FMT = 'dd/MM/yyyy';\n  static readonly DATE_TIME_FMT = `${Constants.DATE_FMT} hh:mm`;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AbstractControlOptions, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ValidatorField } from '@app/helpers/ValidatorField';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.scss']\n})\nexport class RegistrationComponent implements OnInit {\n  form!: FormGroup;\n\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.validation();\n  }\n\n  private validation(): void {\n    const formOptions: AbstractControlOptions = {\n      validators: ValidatorField.MustMatch('password', 'confirmPassword')\n    };\n    this.form = this.fb.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      userName: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(4)]],\n      confirmPassword: ['', Validators.required],\n      acceptTerms: [false, Validators.requiredTrue]\n    }, formOptions);\n  }\n\n  public resetForm(): void {\n    this.form.reset();\n  }\n\n  //Returns the Class to set invalid status to Bootstrap if is there any validation error.\n  public cssValidator(field: string): any {\n    return { 'is-invalid': this.form.get(field)?.errors && this.form.get(field)?.touched };\n  }\n}\n","<div class=\"row mt-4\">\n\n  <div class=\"col-md-6 d-none d-md-block\" style=\"height: 450px;\">\n    <div class=\"text-center col-md-12 my-auto side-heder\">\n      <h1>Cadastro de Usuário</h1>\n      <img src=\"../../../../assets/registerImage.png\" class=\"my-4\" alt=\"\" width=\"400px\">\n    </div>\n  </div>\n\n  <div class=\"col-md-6\">\n\n\n    <form class=\"p-1\" [formGroup]=\"form\">\n      <div class=\"pb-2 d-block d-md-none\">\n        <h3 class=\"border-bottom\">Cadastro de Usuário</h3>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col-sm-6\">\n          <label>Primeiro Nome</label>\n          <input [ngClass]=\"cssValidator('firstName')\"\n            formControlName=\"firstName\" type=\"text\" class=\"form-control\" placeholder=\"Insira o Primeiro nome\" />\n          <div class=\"invalid-feedback\">Primeiro nome é obrigatório</div>\n        </div>\n        <div class=\"form-group col-sm-6\">\n          <label>Último nome</label>\n          <input [ngClass]=\"cssValidator('lastName')\"\n            formControlName=\"lastName\" type=\"text\" class=\"form-control\" placeholder=\"Insira o Último nome\" />\n          <div class=\"invalid-feedback\">Último nome é obrigatório</div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"\">Email:</label>\n        <input [ngClass]=\"cssValidator('email')\"\n          formControlName=\"email\" class=\"form-control\" type=\"text\" placeholder=\"Insira o Nome Completo\" />\n        <div class=\"invalid-feedback\" *ngIf=\"form.get('email')?.hasError('required')\">E-mail é obrigatório</div>\n        <div class=\"invalid-feedback\" *ngIf=\"form.get('email')?.hasError('email')\">Insira um endereço de e-mail válido\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"\">Usuario:</label>\n        <input [ngClass]=\"cssValidator('userName')\"\n          formControlName=\"userName\" class=\"form-control\" type=\"text\" placeholder=\"Insira o nome de Usuário\" />\n        <div class=\"invalid-feedback\">Nome de usuário é obrigatório</div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col-sm-6\">\n          <label for=\"\">Senha:</label>\n          <input [ngClass]=\"cssValidator('password')\"\n            formControlName=\"password\" class=\"form-control\" type=\"password\" placeholder=\"Digite uma Senha\" />\n          <div class=\"invalid-feedback\" *ngIf=\"form.get('password')?.hasError('required')\">Senha é obrigatória</div>\n          <div class=\"invalid-feedback\" *ngIf=\"form.get('password')?.hasError('minlength')\">Tamanho mínimo: 4 caracteres\n          </div>\n        </div>\n        <div class=\"form-group col-sm-6\">\n          <label for=\"\">Confirmar Senha:</label>\n          <input [ngClass]=\"cssValidator('confirmPassword')\"\n            formControlName=\"confirmPassword\" class=\"form-control\" type=\"password\" placeholder=\"Confirme a Senha\" />\n          <div class=\"invalid-feedback\" *ngIf=\"form.get('confirmPassword')?.hasError('required')\">Confirmar a Senha é\n            obrigatório</div>\n          <div class=\"invalid-feedback\" *ngIf=\"form.get('confirmPassword')?.hasError('mustMatch')\">As senhas devem ser\n            iguais</div>\n        </div>\n      </div>\n      <div class=\"form-row p-1 mb-3\">\n        <div class=\"form-check form-control-plaintext\">\n          <input formControlName=\"acceptTerms\"\n          [ngClass]=\"{'is-invalid': form.get('acceptTerms')?.errors && form.get('confirmPassword')?.touched}\"\n          class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"flexCheckDefault\">\n          <label class=\"form-check-label\" for=\"flexCheckDefault\">\n            Eu concordo com os <a href=\"#\">Termos de Uso</a>.\n          </label>\n          <div class=\"invalid-feedback\" *ngIf=\"form.get('acceptTerms')?.hasError('required')\">\n            O usuário deve estar de acordo com os termos de uso\n          </div>\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col-12\">\n          <button class=\"btn btn-lg btn-success btn-block px-5\" [disabled]=\"!form.valid\">\n            Registar\n          </button>\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col-12\">\n          <a class=\"btn btn-link btn-block\" routerLink=\"/user/login\">\n            Já sou Cadastrado\n          </a>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<app-title [title]=\"'Dashboard'\"></app-title>\n","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { AbstractControl, FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Batch } from '@app/models/Batch';\nimport { Event } from '@app/models/Event';\nimport { BatchService } from '@app/services/batch.service';\nimport { EventService } from '@app/services/event.service';\nimport { BsLocaleService } from 'ngx-bootstrap/datepicker';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-evento-detalhe',\n  templateUrl: './evento-detalhe.component.html',\n  styleUrls: ['./evento-detalhe.component.scss']\n})\nexport class EventoDetalheComponent implements OnInit {\n  modalRef: BsModalRef;\n  eventId: number;\n  form: FormGroup;\n  mode = 'post';\n  locale = 'pt-br';\n  event: Event;\n  currentBatch = { id: 0, name: '', index: 0 };\n\n  editMode(): boolean {\n    return this.mode === 'put';\n  }\n\n  get batches(): FormArray {\n    return this.form.get('batches') as FormArray;\n  }\n\n  get getControls(): any {\n    return this.form.controls;\n  }\n\n  constructor(\n    private fb: FormBuilder,\n    private localeService: BsLocaleService,\n    private activatedRouter: ActivatedRoute,\n    private eventService: EventService,\n    private batchService: BatchService,\n    private spinner: NgxSpinnerService,\n    private toastr: ToastrService,\n    private router: Router,\n    private modalService: BsModalService,\n  ) {\n    this.localeService.use(this.locale);\n  }\n\n  ngOnInit(): void {\n    this.validation();\n    this.loadEvent();\n\n  }\n\n  public validation(): void {\n    this.form = this.fb.group({\n      theme: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(50)]],\n      location: ['', Validators.required],\n      eventDate: ['', Validators.required],\n      numberOfPeople: ['', [Validators.required, Validators.max(120000)]],\n      phoneNumber: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      imageURL: ['', Validators.required],\n      batches: this.fb.array([]),\n    });\n  }\n\n\n\n  // Returns the Class to set invalid status to Bootstrap if is there any validation error.\n  public cssValidator(field: FormControl | AbstractControl): any {\n    return { 'is-invalid': field.errors && field.touched };\n  }\n\n  get bsConfig(): any {\n    return {\n      containerClass: 'theme-default',\n      adaptivePosition: true,\n      isAnimated: true,\n      dateInputFormat: 'DD/MM/YYYY HH:mm',\n      showWeekNumbers: false,\n    };\n  }\n  get bsConfigBatch(): any {\n    return {\n      containerClass: 'theme-default',\n      adaptivePosition: true,\n      isAnimated: true,\n      dateInputFormat: 'DD/MM/YYYY',\n      showWeekNumbers: false,\n    };\n  }\n\n  loadEvent(): void {\n    this.eventId = +this.activatedRouter.snapshot.paramMap.get('id');\n\n    if (this.eventId !== null && this.eventId !== 0) {\n      this.spinner.show();\n      this.mode = 'put';\n\n      this.eventService.getEventsById(this.eventId).subscribe({\n        next: (eventReturned: Event) => {\n          this.event = { ...eventReturned };\n          this.form.patchValue(this.event);\n          this.loadBatches();\n        },\n        error: (error: any) => {\n          console.error(error);\n          this.toastr.error('Não foi possível carregar o evento.', 'Erro');\n        },\n        complete: () => { },\n      }).add(() => this.spinner.hide());\n    }\n  }\n\n  public loadBatches(): void {\n    this.batchService.getBatchesFromEvent(this.eventId).subscribe({\n      next: (batchesReturned: Batch[]) => {\n        batchesReturned.forEach(batch => {\n          this.batches.push(this.createBatch(batch));\n        });\n      },\n      error: (error: any) => { this.toastr.error('Não foi possível carregar os lotes.', 'Erro'); },\n      complete: () => { }\n    }).add(() => this.spinner.hide());\n  }\n\n  createBatch(batch: Batch): FormGroup {\n    return this.fb.group({\n      id: [batch.id],\n      name: [batch.name, Validators.required],\n      price: [batch.price, Validators.required],\n      quantity: [batch.quantity, Validators.required],\n      beginDate: [batch.beginDate, Validators.required],\n      endDate: [batch.endDate, Validators.required],\n    });\n  }\n\n  addBatch(): void {\n    this.batches.push(this.createBatch({ id: 0 } as Batch));\n  }\n\n  public saveEvents(): void {\n    if (this.form.valid) {\n      this.spinner.show();\n      this.event = (this.mode === 'post') ? { ...this.form.value } : { id: this.event.id, ...this.form.value };\n\n      if (this.mode === 'post' || this.mode === 'put') {\n        this.eventService[this.mode](this.event).subscribe({\n          next: (eventReturned: Event) => {\n            this.toastr.success('Evento atualizado com sucesso!', 'Atualizado');\n            this.router.navigate([`detalhe/${eventReturned.id}`]);\n          },\n          error: (error: any) => {\n            console.log(error);\n            this.spinner.hide();\n            this.toastr.error('Não foi possível cadastras o novo evento.', 'Falha');\n          },\n          complete: () => {\n            this.spinner.hide();\n          }\n        });\n      }\n    }\n  }\n\n  public saveBatches(): void {\n    if (this.form.controls.batches.valid) {\n      this.spinner.show();\n      this.batchService.saveBatches(this.eventId, this.form.value.batches).subscribe({\n        next: () => {\n          this.toastr.success('Lote cadastrado com sucesso!', 'Cadastrado');\n        },\n        error: (error: any) => {\n          this.toastr.error('Erro ao tentar salvar os lotes');\n          console.log(error);\n        },\n        complete: () => { }\n      }).add(() => { this.spinner.hide(); });\n    }\n  }\n\n\n  public resetForm(): void {\n    this.form.reset();\n  }\n\n  public removeBatch(template: TemplateRef<any>, index: number): void {\n    this.currentBatch.id = this.batches.get(index + '.id').value;\n    this.currentBatch.name = this.batches.get(index + '.name').value;\n    this.currentBatch.index = index;\n    this.modalRef = this.modalService.show(template, { class: 'modal-sm' });\n  }\n\n  public confirmBatchDelete(): void {\n    this.modalRef.hide();\n    this.spinner.show();\n    this.batchService.deleteBatch(this.eventId, this.currentBatch.id).subscribe({\n      next: () => {\n        this.toastr.success('O lote foi excluído com sucesso.', 'Deletado');\n        this.batches.removeAt(this.currentBatch.index);\n      },\n      error: (error: any) => {\n        this.toastr.error(`Não foi possível excluir o lote ${this.currentBatch.name}.`, 'Falha');\n        console.log(error);\n      },\n      complete: () => { }\n    }).add(() => { this.spinner.hide(); });\n\n  }\n  public declineBatchDelete(): void {\n    this.modalRef.hide();\n  }\n\n}\n","<app-title [title]=\"'Editar Evento'\" [icon]=\"'calendar-plus'\"></app-title>\n<div class=\"card rounded shadow-sm \">\n  <form [formGroup]=\"form\">\n    <div class=\"p-3\">\n      <ngx-spinner bdColor=\"rgba(0,5,5,0.5)\" size=\"medium\" color=\"#000000\" type=\"ball-newton-cradle\"\n        [fullScreen]=\"true\">\n        <!-- <p style=\"color: rgb(0, 0, 0)\"> Aguarde... </p> -->\n      </ngx-spinner>\n      <!-- FIRST LINE -->\n      <div class=\"form-row\">\n\n        <div class=\"form-group col-md-12\">\n          <label>Tema</label>\n          <input type=\"text\" class=\"form-control\" formControlName=\"theme\" [ngClass]=\"cssValidator(form.controls.theme)\"\n            placeholder=\"Insira o Tema\">\n          <div class=\"invalid-feedback\" *ngIf=\"form.get('theme')?.hasError('required')\">Tema é obrigatório</div>\n          <div class=\"invalid-feedback\" *ngIf=\"form.get('theme')?.hasError('minlength')\">Tamanho mínimo: 4 caracteres\n          </div>\n          <div class=\"invalid-feedback\" *ngIf=\"form.get('theme')?.hasError('maxlength')\">Tamanho máximo: 50 caracteres\n          </div>\n        </div>\n\n      </div>\n\n      <!-- SECOND LINE -->\n      <div class=\"form-row\">\n\n        <div class=\"form-group col-md-8\">\n          <label>Local</label>\n          <input type=\"text\" class=\"form-control\" [ngClass]=\"cssValidator(form.controls.location)\" formControlName=\"location\"\n            placeholder=\"Insira o local\">\n          <div class=\"invalid-feedback\">Local é obrigatório</div>\n        </div>\n\n        <div class=\"form-group col-md-4\">\n          <label>Data e Hora</label>\n          <input type=\"datetime\" class=\"form-control\" [ngClass]=\"cssValidator(form.controls.eventDate)\" formControlName=\"eventDate\"\n            placeholder=\"\" bsDatepicker [bsConfig]=\"bsConfig\" value=\"{{event?.eventDate | DateTimeFormat}}\">\n          <div class=\"invalid-feedback\">Data é obrigatória</div>\n        </div>\n\n      </div>\n\n      <!-- THIRD LINE -->\n      <div class=\"form-row\">\n\n        <div class=\"form-group col-md-2\">\n          <label>Ocupação Máxima</label>\n          <input type=\"number\" class=\"form-control\" [ngClass]=\"cssValidator(form.controls.numberOfPeople)\"\n            formControlName=\"numberOfPeople\" placeholder=\"\">\n          <div class=\"invalid-feedback\" *ngIf=\"form.get('numberOfPeople')?.hasError('required')\">Ocupação máxima é\n            obrigatória\n          </div>\n          <div class=\"invalid-feedback\" *ngIf=\"form.get('numberOfPeople')?.hasError('max')\">A capacidade máxima é de\n            120000\n          </div>\n\n        </div>\n\n        <div class=\"form-group col-md-2\">\n          <label>Telefone</label>\n          <input type=\"text\" class=\"form-control\" [ngClass]=\"cssValidator(form.controls.phoneNumber)\" formControlName=\"phoneNumber\"\n            placeholder=\"(000) 90000-0000\">\n          <div class=\"invalid-feedback\">Telefone é obrigatório</div>\n        </div>\n\n        <div class=\"form-group col-md-4\">\n          <label>Email</label>\n          <input type=\"text\" class=\"form-control\" [ngClass]=\"cssValidator(form.controls.email)\" formControlName=\"email\"\n            placeholder=\"e-mail\">\n          <div class=\"invalid-feedback\" *ngIf=\"form.get('email')?.hasError('required')\">E-mail é obrigatório\n          </div>\n          <div class=\"invalid-feedback\" *ngIf=\"form.get('email')?.hasError('email')\">Insira um endereço de e-mail válido\n          </div>\n        </div>\n\n        <div class=\"form-group col-md-4\">\n          <label>Imagem</label>\n          <input type=\"text\" class=\"form-control\" [ngClass]=\"cssValidator(form.controls.imageURL)\" formControlName=\"imageURL\"\n            placeholder=\"imagem\">\n          <div class=\"invalid-feedback\">Imagem é obrigatório</div>\n        </div>\n\n      </div>\n\n    </div>\n    <div class=\"card-footer\">\n      <div class=\"d-flex\">\n        <button class=\"btn btn-outline-secondary mr-auto border\" (click)=\"resetForm()\">\n          Cancelar Alteração\n        </button>\n        <button class=\"btn btn-success\" [disabled]=\"!form.valid\" (click)=\"saveEvents()\">\n          <!-- <span class=\"spinner-border spinner-border-sm mr-1\"></span> -->\n          Salvar Evento\n        </button>\n      </div>\n    </div>\n  </form>\n</div>\n\n<!-- BATCHES FORM -->\n <!-- <p>Form value: {{form.controls.batches.value | json}}</p>\n  <p>Form valid: {{form.controls.batches.status | json}}</p> -->\n\n<div class=\"card rounded shadow-sm mt-4\" *ngIf=\"mode === 'put'\">\n\n  <div class=\"p-3\">\n    <div class=\"d-flex border-bottom\">\n      <h2 class=\"mr-auto\">\n        Lotes do Evento\n      </h2>\n      <h2>\n        <i class=\"fas fa-money-bill-wave\"></i>\n      </h2>\n    </div>\n    <p>Clique em Lote para adicionar e preencher novos Lotes</p>\n    <div class=\"form-row p-1\">\n      <div [formGroup]=\"form\" class=\"col\">\n        <div formArrayName=\"batches\" *ngFor=\"let batch of batches.controls; let i=index\">\n          <fieldset [formGroupName]=\"i\" class=\"form-group\">\n            <legend class=\"d-flex justify-content-between capitalize\">\n\n              <button (click)=\"removeBatch(template, i)\" class=\"p-2 btn btn-sm btn-outline-warning mb-1 d-flex\" tooltip=\"Excluir Lote\"\n                [adaptivePosition]=\"false\" [delay]=\"500\" placement=\"left\">\n                <i class=\"fa fa-window-close my-1\"></i>\n                <b class=\"ml-1 d-none d-sm-block\">Excluir</b>\n              </button>\n            </legend>\n            <div class=\"row\">\n              <div class=\"form-group col-md-4\">\n                <label>Nome</label>\n                <input [ngClass]=\"{'is-invalid': batches.get(i + '.name')?.errors}\"\n                type=\"text\" class=\"form-control\"\n                  formControlName=\"name\" placeholder=\"Lote\">\n                  <div class=\"invalid-feedback\">Nome é obrigatório</div>\n              </div>\n              <div class=\"form-group col-md-4\">\n                <label>Quantidade</label>\n                <input type=\"text\" class=\"form-control\"\n                  formControlName=\"quantity\" placeholder=\"000\">\n              </div>\n              <div class=\"form-group col-md-4\">\n                <label>Preço</label>\n                <input type=\"text\" class=\"form-control\"\n                currencyMask [options]=\"{prefix:'R$ ', thousands: '.', decimal: ','}\"\n                 formControlName=\"price\"\n                  placeholder=\"R$ 0,00\">\n              </div>\n              <div class=\"form-group col-md-4\">\n                <label>Data Início</label>\n                <input type=\"datetime\" class=\"form-control\" bsDatepicker\n                  value=\"{{batches.get(i+'.beginDate').value | DateTimeFormat}}\" placeholder=\"01/01/2019\"\n                  formControlName=\"beginDate\" [bsConfig]=\"bsConfigBatch\"\n                  >\n              </div>\n              <div class=\"form-group col-md-4\">\n                <label>Data Fim</label>\n                <input type=\"datetime\" class=\"form-control\" bsDatepicker\n                  value=\"{{batches.get(i+'.endDate').value | DateTimeFormat }}\" placeholder=\"01/01/2019\"\n                  formControlName=\"endDate\" [bsConfig]=\"bsConfigBatch\"\n                  >\n              </div>\n            </div>\n          </fieldset>\n        </div>\n      </div>\n    </div>\n    <button (click)=\"addBatch()\" class=\"d-flex btn btn-outline-primary\">\n      <i class=\"fa fa-plus-circle my-1\"></i>\n      <b class=\"ml-1\">Lote</b>\n    </button>\n  </div>\n  <div class=\"card-footer\">\n    <div class=\"d-flex\">\n      <button class=\"btn btn-outline-secondary mr-auto border\">\n        Cancelar Alteração\n      </button>\n      <button [disabled]=\"!form.controls.batches.valid\" (click)=\"saveBatches()\" class=\"btn btn-success\">\n        Salvar Lotes\n      </button>\n    </div>\n  </div>\n</div>\n<br>\n\n<ng-template #template>\n  <div class=\"modal-body text-center\">\n    <p>Tem certeza que quer deletar o lote {{this.currentBatch.name}}?</p>\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"confirmBatchDelete()\">Sim</button>\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"declineBatchDelete()\">Não</button>\n  </div>\n</ng-template>\n","import { AbstractControl, FormGroup } from '@angular/forms';\n\nexport class ValidatorField {\n  static MustMatch(controlName: string, matchingControlName: string): any {\n    return (group: AbstractControl): any => {\n      const formGroup = group as FormGroup;\n      const control = formGroup.controls[controlName];\n      const matchingControl = formGroup.controls[matchingControlName];\n\n      if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n        return null;\n      }\n\n      if (control.value !== matchingControl.value) {\n        matchingControl.setErrors({ mustMatch: true });\n      } else {\n        matchingControl.setErrors(null);\n      }\n      return null;\n    };\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'ProEventos-App';\n}\n","<app-nav></app-nav>\n<div class=\"container mt-4\">\n  <router-outlet></router-outlet>\n</div>\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app-routing.module';\n\n// NGX\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { ToastrModule } from 'ngx-toastr';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker'\nimport { NgxCurrencyModule } from 'ngx-currency'\n//DATEPICKER\nimport { defineLocale } from 'ngx-bootstrap/chronos'\nimport { ptBrLocale } from 'ngx-bootstrap/locale'\ndefineLocale('pt-br', ptBrLocale);\n\n// Components\nimport { AppComponent } from './app.component';\nimport { EventosComponent } from './components/eventos/eventos.component';\nimport { PalestrantesComponent } from './components/palestrantes/palestrantes.component';\nimport { ContatosComponent } from './components/contatos/contatos.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { PerfilComponent } from './components/user/perfil/perfil.component';\nimport { NavComponent } from './shared/nav/nav.component';\nimport { TitleComponent } from './shared/title/title.component';\nimport { DateTimeFormatPipe } from './helpers/DateTimeFormat.pipe';\nimport { EventoDetalheComponent } from './components/eventos/evento-detalhe/evento-detalhe.component';\nimport { UserComponent } from './components/user/user.component';\nimport { LoginComponent } from './components/user/login/login.component';\nimport { RegistrationComponent } from './components/user/registration/registration.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EventosComponent,\n    PalestrantesComponent,\n    NavComponent,\n    TitleComponent,\n    ContatosComponent,\n    DashboardComponent,\n    PerfilComponent,\n    DateTimeFormatPipe,\n    EventoDetalheComponent,\n    UserComponent,\n    LoginComponent,\n    RegistrationComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TooltipModule.forRoot(),\n    BsDropdownModule.forRoot(),\n    CollapseModule.forRoot(),\n    ModalModule.forRoot(),\n    ToastrModule.forRoot({\n      timeOut: 5000,\n      positionClass: 'toast-bottom-right',\n      preventDuplicates: true,\n      progressBar: true,\n      progressAnimation: 'decreasing',\n    }),\n    NgxSpinnerModule,\n    BsDatepickerModule.forRoot(),\n    NgxCurrencyModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n\n})\nexport class AppModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { take } from 'rxjs/operators';\nimport { Event } from '../models/Event';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n  baseURL = 'https://localhost:5001/api/eventos';\n\n  constructor(private http: HttpClient) { }\n\n  public getEvents(): Observable<Event[]> {\n    return this.http.get<Event[]>(this.baseURL).pipe(take(1));\n  }\n  public getEventsByTheme(theme: string): Observable<Event[]> {\n    return this.http.get<Event[]>(`${this.baseURL}/${theme}/tema`).pipe(take(1));\n  }\n  public getEventsById(id: number): Observable<Event> {\n    return this.http.get<Event>(`${this.baseURL}/${id}`).pipe(take(1));\n  }\n  public post(event: Event): Observable<Event> {\n    return this.http.post<Event>(this.baseURL, event).pipe(take(1));\n  }\n  public put(event: Event): Observable<Event> {\n    return this.http.put<Event>(`${this.baseURL}/${event.id}`, event).pipe(take(1));\n  }\n  public deleteEvent(id: number): Observable<any> {\n    return this.http.delete(`${this.baseURL}/${id}`).pipe(take(1));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"d-flex align-items-center vh-100\">\n\n  <div class=\"mx-auto text-center shadow-sm bg-white rounded p-5 my-5\">\n\n    <form class=\"form-signin\">\n      <i class=\"fa fa-users fa-3x mb-2\"></i>\n      <h1 class=\"h3 mb-3 font-weight-normal\">Entrar com</h1>\n      <label for=\"username\" class=\"sr-only\">Usuário</label>\n      <input type=\"email\" id=\"username\" class=\"form-control\" placeholder=\"Usuário\" name=\"username\" required>\n      <label for=\"password\" class=\"sr-only\">Password</label>\n      <input type=\"password\" id=\"password\" class=\"form-control\" placeholder=\"Senha\" name=\"password\" required>\n      <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Entrar</button>\n      <p class=\"mt-4 mb-2 text-muted\">Não tem login? Cadastre-se abaixo</p>\n      <a class=\"btn btn-lg btn-link btn-block\" routerLink=\"/user/registration\">Quero me cadastrar</a>\n    </form>\n\n  </div>\n\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Batch } from '@app/models/Batch';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { take } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BatchService {\n  baseURL = 'https://localhost:5001/api/lotes';\n\n  constructor(private http: HttpClient) { }\n\n  public getBatchesFromEvent(eventId: number): Observable<Batch[]> {\n    return this.http.get<Batch[]>(`${this.baseURL}/${eventId}`).pipe(take(1));\n  }\n  public saveBatches(eventId: number, batches: Batch[]): Observable<Batch[]> {\n    console.log(batches);\n    return this.http.put<Batch[]>(`${this.baseURL}/${eventId}`, batches).pipe(take(1));\n  }\n  public deleteBatch(eventId: number, batchId: number): Observable<any> {\n    return this.http.delete(`${this.baseURL}/${eventId}/${batchId}`).pipe(take(1));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-palestrantes',\n  templateUrl: './palestrantes.component.html',\n  styleUrls: ['./palestrantes.component.scss']\n})\nexport class PalestrantesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-title [title]=\"'Palestrantes'\" [icon]=\"'chalkboard-teacher'\"></app-title>\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-title',\n  templateUrl: './title.component.html',\n  styleUrls: ['./title.component.scss']\n})\nexport class TitleComponent implements OnInit {\n\n  @Input() title!: string;\n  @Input() icon!: string;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<hr>\n<div class=\"d-flex align-items-center p-3 my-3 bg-secondary text-white-50 rounded shadow-sm\">\n  <div class=\"lh-1\">\n    <i class=\"fa fa-{{icon}}\"></i>\n    <h1 class=\"h2 mb-0 text-white lh-1\">\n      {{title}}\n    </h1>\n    <small>por: Lucas Maiorini</small>\n  </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AbstractControlOptions, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ValidatorField } from '@app/helpers/ValidatorField';\n\n@Component({\n  selector: 'app-perfil',\n  templateUrl: './perfil.component.html',\n  styleUrls: ['./perfil.component.scss']\n})\nexport class PerfilComponent implements OnInit {\n  form!: FormGroup;\n\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.validation();\n  }\n\n  private validation(): void {\n    const formOptions: AbstractControlOptions = {\n      validators: ValidatorField.MustMatch('password', 'confirmPassword')\n    };\n    this.form = this.fb.group({\n      title: ['', Validators.required],\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      phone: ['', Validators.required],\n      role: ['', Validators.required],\n      description: [],\n      password: [],\n      confirmPassword: [],\n    }, formOptions);\n  }\n\n  public resetForm(event: any): void {\n    event.preventDefault();\n    this.form.reset();\n  }\n\n  //Returns the Class to set invalid status to Bootstrap if is there any validation error.\n  public cssValidator(field: string): any {\n    return { 'is-invalid': this.form.get(field)?.errors && this.form.get(field)?.touched };\n  }\n}\n","<app-title title='Perfil' [icon]=\"'user'\"></app-title>\n<div class=\"card rounded shadow-sm \">\n  <form [formGroup]=\"form\">\n    <div class=\"row p-3\">\n      <div class=\"col-lg-3 pt-1\">\n        <div class=\"card mb-3\">\n          <div class=\"card-header\"></div>\n          <div class=\"d-flex align-self-center pt-3\">\n            <a>\n              <img\n                src=\"https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcRbezqZpEuwGSvitKy3wrwnth5kysKdRqBW54cAszm_wiutku3R\"\n                name=\"aboutme\" width=\"120\" height=\"120\" class=\"rounded-circle\">\n            </a>\n          </div>\n          <div class=\"card-body\">\n            <div class=\"h4 text-center mb-3\">@UserName</div>\n            <div class=\"h7 text-bold pb-1\"><b>Nome:</b> Miracles Lee Cross</div>\n            <div class=\"h7\">\n              Developer of web applications, JavaScript, PHP, Java, Python, Ruby, Java, Node.js,\n              etc.\n            </div>\n          </div>\n          <ul class=\"list-group list-group-flush\">\n            <li class=\"list-group-item\">\n              <div class=\"row\">\n                <div class=\"col-6 text-center border-right\">\n                  <div class=\"h5\">14</div>\n                  <div class=\"h6 text-muted\">Eventos Ministrados</div>\n                </div>\n                <div class=\"col-6 text-center\">\n                  <div class=\"h5\">162</div>\n                  <div class=\"h6 text-muted\">Eventos Participados</div>\n                </div>\n              </div>\n            </li>\n          </ul>\n          <div class=\"card-footer\"></div>\n        </div>\n      </div>\n      <div class=\"col-lg-9\">\n\n        <!-- FORM -->\n        <div class=\"form-row\">\n\n          <div class=\"form-group col-12\">\n            <h3 class=\"border-bottom\">Detalhe Perfil</h3>\n          </div>\n          <div class=\"form-group col\">\n            <label>Título</label>\n            <select class=\"form-control\" formControlName=\"title\"\n            [ngClass]=\"cssValidator('title')\">\n              <option value=\"\"></option>\n              <option value=\"0\">Não Quero</option>\n              <option value=\"Senhorita\">Tecnólogo(a)</option>\n              <option value=\"Senhorita\">Bacharel</option>\n              <option value=\"Senhorita\">Especialista</option>\n              <option value=\"Senhorita\">Pós Graduado(a)</option>\n              <option value=\"Senhorita\">Mestre</option>\n              <option value=\"Senhorita\">Doutor(a)</option>\n              <option value=\"Senhorita\">Pós Doc</option>\n            </select>\n            <div class=\"invalid-feedback\">Título é obrigatório</div>\n\n          </div>\n\n          <div class=\"form-group col-sm-5\">\n            <label>Primeiro Nome</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"firstName\"\n            [ngClass]=\"cssValidator('firstName')\">\n            <div class=\"invalid-feedback\">Primeiro nome é obrigatório</div>\n          </div>\n\n          <div class=\"form-group col-sm-5\">\n            <label>Último nome</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"lastName\"\n            [ngClass]=\"cssValidator('lastName')\">\n            <div class=\"invalid-feedback\">Primeiro nome é obrigatório</div>\n          </div>\n\n        </div>\n\n        <div class=\"form-row\">\n\n          <div class=\"form-group col-sm-5\">\n            <label>E-mail</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"email\"\n            [ngClass]=\"cssValidator('email')\"/>\n            <div class=\"invalid-feedback\" *ngIf=\"form.get('email')?.hasError('required')\">E-mail é obrigatório</div>\n            <div class=\"invalid-feedback\" *ngIf=\"form.get('email')?.hasError('email')\">Insira um endereço de e-mail\n              válido\n            </div>\n          </div>\n\n          <div class=\"form-group col-sm-4\">\n            <label>Telefone</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"phone\"\n            [ngClass]=\"cssValidator('phone')\">\n            <div class=\"invalid-feedback\" *ngIf=\"form.get('phone')?.hasError('required')\">Telefone é obrigatório</div>\n          </div>\n\n          <div class=\"form-group col-sm\">\n            <label>Função</label>\n            <select class=\"form-control\" formControlName=\"role\"\n            [ngClass]=\"cssValidator('role')\">\n              <option value=\"\"></option>\n              <option value=\"Participante\">Participante</option>\n              <option value=\"Palestrante\">Palestrante</option>\n            </select>\n            <div class=\"invalid-feedback\" *ngIf=\"form.get('role')?.hasError('required')\">Função é obrigatório</div>\n          </div>\n\n          <form-group class=\"col-12\">\n            <label>Descrição</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"description\"\n            [ngClass]=\"cssValidator('description')\" />\n          </form-group>\n\n        </div>\n\n        <div>\n          <h3 class=\"pt-3 border-bottom\">Mudar Senha</h3>\n          <p>Caso mude de senha, preencha os campos abaixo:</p>\n        </div>\n\n        <div class=\"form-row\">\n\n          <div class=\"form-group col-sm\">\n            <label>Senha</label>\n            <input type=\"password\" class=\"form-control\" formControlName=\"password\"\n            [ngClass]=\"cssValidator('password')\"/>\n          </div>\n\n          <div class=\"form-group col-sm\">\n            <label>Confirmar Senha</label>\n            <input type=\"password\" class=\"form-control\" formControlName=\"confirmPassword\"\n            [ngClass]=\"cssValidator('confirmPassword')\"/>\n            <div class=\"invalid-feedback\" *ngIf=\"form.get('confirmPassword')?.hasError('mustMatch')\">As senhas devem ser\n              iguais</div>\n          </div>\n\n        </div>\n      </div>\n    </div>\n    <div class=\"card-footer\">\n      <div class=\"d-flex\">\n        <button class=\"btn btn-outline-secondary mr-auto border\" (click)=\"resetForm($event)\">\n          Cancelar Alteração\n        </button>\n        <button class=\"btn btn-success\" [disabled]=\"!form.valid\">\n          <!-- <span class=\"spinner-border spinner-border-sm mr-1\"></span> -->\n          Salvar Alteração\n        </button>\n      </div>\n    </div>\n  </form>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ContatosComponent } from './components/contatos/contatos.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { EventoDetalheComponent } from './components/eventos/evento-detalhe/evento-detalhe.component';\nimport { EventosComponent } from './components/eventos/eventos.component';\nimport { PalestrantesComponent } from './components/palestrantes/palestrantes.component';\nimport { LoginComponent } from './components/user/login/login.component';\nimport { PerfilComponent } from './components/user/perfil/perfil.component';\nimport { RegistrationComponent } from './components/user/registration/registration.component';\nimport { UserComponent } from './components/user/user.component';\n\nconst routes: Routes = [\n  { path: 'eventos', component: EventosComponent },\n  {\n    path: 'user', component: UserComponent,\n    children: [\n      { path: 'login', component: LoginComponent },\n      { path: 'registration', component: RegistrationComponent }\n    ]\n  },\n  { path: 'user/perfil', component: PerfilComponent },\n  { path: 'detalhe/:id', component: EventoDetalheComponent },\n  { path: 'detalhe', component: EventoDetalheComponent },\n  { path: 'palestrantes', component: PalestrantesComponent },\n  { path: 'dashboard', component: DashboardComponent },\n  { path: 'contatos', component: ContatosComponent },\n  { path: '', redirectTo: 'dashboard', pathMatch: 'full' },\n  { path: '**', redirectTo: 'dashboard', pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.scss']\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}